// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAESoft.Models;

#nullable disable

namespace SAESoft.Migrations
{
    [DbContext(typeof(SAESoftContext))]
    [Migration("20241209214231_AgregaEncargadoGrupoDeptoIncentivo")]
    partial class AgregaEncargadoGrupoDeptoIncentivo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ImportacionRevision", b =>
                {
                    b.Property<int>("ImportacionesIdImport")
                        .HasColumnType("int");

                    b.Property<int>("RevisionesIdRevision")
                        .HasColumnType("int");

                    b.HasKey("ImportacionesIdImport", "RevisionesIdRevision");

                    b.HasIndex("RevisionesIdRevision");

                    b.ToTable("ImportacionRevision");
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.Property<int>("PermisosIdPermiso")
                        .HasColumnType("int");

                    b.Property<int>("RolesIdRol")
                        .HasColumnType("int");

                    b.HasKey("PermisosIdPermiso", "RolesIdRol");

                    b.HasIndex("RolesIdRol");

                    b.ToTable("PermisoRol");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.AdminStatus", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatus"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoDoc")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Ultimo")
                        .HasColumnType("bit");

                    b.HasKey("IdStatus");

                    b.HasIndex("IdTipoDoc");

                    b.ToTable("AdminStatuses");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Contrato", b =>
                {
                    b.Property<int>("IdContrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContrato"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdContrato");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.DepartamentoInterno", b =>
                {
                    b.Property<int>("IdDepto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepto"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDepto");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("DepartamentosInternos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Documento", b =>
                {
                    b.Property<int>("IdDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocumento"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int?>("IdFamiliar")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<bool>("NoVence")
                        .HasColumnType("bit");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdDocumento");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdFamiliar");

                    b.HasIndex("IdTipo");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AñosResidencia")
                        .HasColumnType("int");

                    b.Property<bool>("BoletoOrnato")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CuotaAnual")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)");

                    b.Property<int?>("IdContrato")
                        .HasColumnType("int");

                    b.Property<int>("IdDepto")
                        .HasColumnType("int");

                    b.Property<int?>("IdPermisoTrabajo")
                        .HasColumnType("int");

                    b.Property<int>("IdPuesto")
                        .HasColumnType("int");

                    b.Property<int?>("IdResidencia")
                        .HasColumnType("int");

                    b.Property<int?>("IdSeguroMedico")
                        .HasColumnType("int");

                    b.Property<int?>("IdSeguroVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("NombreCoreano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("IdContrato")
                        .IsUnique()
                        .HasFilter("[IdContrato] IS NOT NULL");

                    b.HasIndex("IdDepto");

                    b.HasIndex("IdPermisoTrabajo")
                        .IsUnique()
                        .HasFilter("[IdPermisoTrabajo] IS NOT NULL");

                    b.HasIndex("IdPuesto");

                    b.HasIndex("IdResidencia")
                        .IsUnique()
                        .HasFilter("[IdResidencia] IS NOT NULL");

                    b.HasIndex("IdSeguroMedico")
                        .IsUnique()
                        .HasFilter("[IdSeguroMedico] IS NOT NULL");

                    b.HasIndex("IdSeguroVehiculo")
                        .IsUnique()
                        .HasFilter("[IdSeguroVehiculo] IS NOT NULL");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Familiar", b =>
                {
                    b.Property<int>("IdFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFamiliar"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AñosResidencia")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdParentesco")
                        .HasColumnType("int");

                    b.Property<int?>("IdResidencia")
                        .HasColumnType("int");

                    b.Property<int?>("IdSeguroMedico")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFamiliar");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdParentesco");

                    b.HasIndex("IdResidencia")
                        .IsUnique()
                        .HasFilter("[IdResidencia] IS NOT NULL");

                    b.HasIndex("IdSeguroMedico")
                        .IsUnique()
                        .HasFilter("[IdSeguroMedico] IS NOT NULL");

                    b.ToTable("Familiares");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.HistorialReclamo", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdReclamo")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdReclamo");

                    b.HasIndex("IdStatus");

                    b.ToTable("HistorialReclamos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.HistorialTramite", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdTramite")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdTramite");

                    b.ToTable("HistorialTramites");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Nombramiento", b =>
                {
                    b.Property<int>("IdNombramiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNombramiento"));

                    b.Property<DateTime?>("Cancelacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Cancelado")
                        .HasColumnType("bit");

                    b.Property<string>("Expediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inscripcion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Libro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Registro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdNombramiento");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdTipo");

                    b.ToTable("Nombramientos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.PermisoTrabajo", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resolucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPermiso");

                    b.HasIndex("IdTipo");

                    b.ToTable("PermisosTrabajo");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Reclamo", b =>
                {
                    b.Property<int>("IdReclamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReclamo"));

                    b.Property<string>("Cheque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Coaseguro")
                        .HasColumnType("money");

                    b.Property<decimal?>("Deducible")
                        .HasColumnType("money");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRecibir")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdMoneda")
                        .HasColumnType("int");

                    b.Property<int?>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("money");

                    b.Property<decimal?>("MontoCheque")
                        .HasColumnType("money");

                    b.Property<decimal?>("MontosNoCubiertos")
                        .HasColumnType("money");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OtrosGastos")
                        .HasColumnType("money");

                    b.Property<decimal?>("Timbres")
                        .HasColumnType("money");

                    b.HasKey("IdReclamo");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdMoneda");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdTipo");

                    b.ToTable("Reclamos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Residencia", b =>
                {
                    b.Property<int>("IdResidencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResidencia"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Resolucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Visa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdResidencia");

                    b.HasIndex("IdTipo");

                    b.ToTable("Residencias");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.SeguroMedico", b =>
                {
                    b.Property<int>("IdMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedico"));

                    b.Property<string>("Carnet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Certificado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdMedico");

                    b.ToTable("SegurosMedicos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.SeguroVehiculo", b =>
                {
                    b.Property<int>("IdVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVehiculo"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Contado")
                        .HasColumnType("bit");

                    b.Property<int?>("Cuotas")
                        .HasColumnType("int");

                    b.Property<decimal>("Deducible")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAseguradora")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Modelo")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poliza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prima")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdVehiculo");

                    b.HasIndex("IdAseguradora");

                    b.ToTable("SegurosVehiculos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.TipoDocumento", b =>
                {
                    b.Property<int>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoDocumento"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<bool>("mostrar")
                        .HasColumnType("bit");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TiposDocumento");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Tramite", b =>
                {
                    b.Property<int>("IdTramite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTramite"));

                    b.Property<DateTime?>("Cita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int?>("IdInteresado")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("NumeroSolicitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTramite");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdInteresado");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdTipo");

                    b.ToTable("Tramites");
                });

            modelBuilder.Entity("SAESoft.Models.AdministracionSistema.Modulo", b =>
                {
                    b.Property<int>("IdModulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModulo"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdModulo");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("SAESoft.Models.AdministracionSistema.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdModulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdPermiso");

                    b.HasIndex("IdModulo");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("SAESoft.Models.AdministracionSistema.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdRol");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SAESoft.Models.AdministracionSistema.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdRol");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SAESoft.Models.Comunes.Firma", b =>
                {
                    b.Property<int>("IdFirma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFirma"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdModulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("firma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("puesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFirma");

                    b.HasIndex("IdModulo");

                    b.ToTable("Firmas");
                });

            modelBuilder.Entity("SAESoft.Models.Comunes.Grupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupo"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdModulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdGrupo");

                    b.HasIndex("IdModulo");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("SAESoft.Models.Comunes.Moneda", b =>
                {
                    b.Property<int>("IdMoneda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoneda"));

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMoneda");

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("SAESoft.Models.Comunes.Nombre", b =>
                {
                    b.Property<int>("IdNombre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNombre"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.HasKey("IdNombre");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("Descripcion", "IdGrupo")
                        .IsUnique();

                    b.ToTable("Nombres");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.ComentFacExport", b =>
                {
                    b.Property<int>("IdComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComment"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLicencia")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.HasKey("IdComment");

                    b.HasIndex("IdLicencia");

                    b.ToTable("ComentFacsExport");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.Descargo", b =>
                {
                    b.Property<int>("IdDescargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDescargo"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLicencia")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("NumDescargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("final")
                        .HasColumnType("bit");

                    b.HasKey("IdDescargo");

                    b.HasIndex("IdLicencia");

                    b.ToTable("Descargos");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.Duca", b =>
                {
                    b.Property<int>("IdDuca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDuca"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdDucaRef")
                        .HasColumnType("int");

                    b.Property<int>("IdLicencia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDuca")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("NumDuca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDuca");

                    b.HasIndex("IdLicencia");

                    b.HasIndex("IdTipoDuca");

                    b.ToTable("Ducas");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.FacturaExport", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdAduana")
                        .HasColumnType("int");

                    b.Property<int>("IdConsignatario")
                        .HasColumnType("int");

                    b.Property<int?>("IdExportador")
                        .HasColumnType("int");

                    b.Property<int?>("IdLicencia")
                        .HasColumnType("int");

                    b.Property<int?>("IdModalidad")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoFactura")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("NoFactura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotaCredito")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdFactura");

                    b.HasIndex("IdAduana");

                    b.HasIndex("IdConsignatario");

                    b.HasIndex("IdExportador");

                    b.HasIndex("IdLicencia");

                    b.HasIndex("IdModalidad");

                    b.HasIndex("IdTipoFactura");

                    b.ToTable("FacturasExport");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.FacturaLocal", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoFactura")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("NoFactura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotaCredito")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdFactura");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdTipoFactura");

                    b.ToTable("FacturasLocal");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.Licencia", b =>
                {
                    b.Property<int>("IdLicencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLicencia"));

                    b.Property<Guid>("Codigo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("NumLicencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLicencia");

                    b.ToTable("Licencias");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Aduana", b =>
                {
                    b.Property<int>("IdAduana")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAduana"));

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Via")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("IdAduana");

                    b.HasIndex("Abreviatura")
                        .IsUnique();

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Aduanas");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Agente", b =>
                {
                    b.Property<int>("IdAgente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgente"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAgente");

                    b.ToTable("Agentes");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.BL", b =>
                {
                    b.Property<int>("IdBL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBL"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdImportacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdBL");

                    b.HasIndex("IdImportacion");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.ToTable("BL");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Contenedor", b =>
                {
                    b.Property<int>("IdContenedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContenedor"));

                    b.Property<string>("Cabezal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<string>("Furgon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdImportacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdPago")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdContenedor");

                    b.HasIndex("IdImportacion");

                    b.ToTable("Contenedores");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.ImportHistorial", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdImport")
                        .HasColumnType("int");

                    b.Property<int>("IdImportStatus")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdImport");

                    b.HasIndex("IdImportStatus");

                    b.ToTable("ImportHistorial");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.ImportStatus", b =>
                {
                    b.Property<int>("IdImportStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImportStatus"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Via")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<long>("orden")
                        .HasColumnType("bigint");

                    b.Property<bool>("ultimo")
                        .HasColumnType("bit");

                    b.HasKey("IdImportStatus");

                    b.ToTable("ImportStatus");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Importacion", b =>
                {
                    b.Property<int>("IdImport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImport"));

                    b.Property<Guid>("Codigo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Consolidado")
                        .HasColumnType("bit");

                    b.Property<int>("Demora")
                        .HasColumnType("int");

                    b.Property<bool>("DocOriginales")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ETA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdAduana")
                        .HasColumnType("int");

                    b.Property<int?>("IdAgente")
                        .HasColumnType("int");

                    b.Property<int?>("IdAlmacenadora")
                        .HasColumnType("int");

                    b.Property<int?>("IdDestino")
                        .HasColumnType("int");

                    b.Property<int?>("IdForwarder")
                        .HasColumnType("int");

                    b.Property<int>("IdImportStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdNaviera")
                        .HasColumnType("int");

                    b.Property<int>("IdShipper")
                        .HasColumnType("int");

                    b.Property<int?>("IdTerminal")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<int>("TiempoLibre")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDiaExtraD")
                        .HasColumnType("money");

                    b.Property<decimal>("ValorDiaExtraTL")
                        .HasColumnType("money");

                    b.Property<string>("Via")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("personaUrgente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("urgente")
                        .HasColumnType("bit");

                    b.HasKey("IdImport");

                    b.HasIndex("IdAduana");

                    b.HasIndex("IdAgente");

                    b.HasIndex("IdAlmacenadora");

                    b.HasIndex("IdDestino");

                    b.HasIndex("IdForwarder");

                    b.HasIndex("IdImportStatus");

                    b.HasIndex("IdNaviera");

                    b.HasIndex("IdShipper");

                    b.HasIndex("IdTerminal");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Importaciones");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdContenedor")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoAlmacenaje")
                        .HasColumnType("money");

                    b.Property<decimal>("MontoDemora")
                        .HasColumnType("money");

                    b.HasKey("IdPago");

                    b.HasIndex("IdContenedor")
                        .IsUnique();

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Poliza", b =>
                {
                    b.Property<int>("IdPoliza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPoliza"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBL")
                        .HasColumnType("int");

                    b.Property<int?>("IdModalidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPoliza");

                    b.HasIndex("IdBL");

                    b.HasIndex("IdModalidad");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.ToTable("Polizas");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Revision", b =>
                {
                    b.Property<int>("IdRevision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRevision"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.HasKey("IdRevision");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("Revisiones");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Shipper", b =>
                {
                    b.Property<int>("IdShipper")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdShipper"));

                    b.Property<bool>("Aereo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<bool>("Maritimo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Terrestre")
                        .HasColumnType("bit");

                    b.HasKey("IdShipper");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Terminal", b =>
                {
                    b.Property<int>("IdTerminal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTerminal"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Via")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("IdTerminal");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Terminales");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.Asistencia", b =>
                {
                    b.Property<int>("IdAsistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsistencia"));

                    b.Property<int>("Ausente")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdEvaluacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<int>("Permiso")
                        .HasColumnType("int");

                    b.Property<int>("Porcentaje")
                        .HasColumnType("int");

                    b.Property<int>("Tardanza")
                        .HasColumnType("int");

                    b.HasKey("IdAsistencia");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEvaluacion");

                    b.ToTable("Asistencia");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.DeptoIncentivo", b =>
                {
                    b.Property<int>("IdDepto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDepto");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("DeptoIncentivo");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.EmpIncentivos", b =>
                {
                    b.Property<int>("IdEmpIncentivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpIncentivo"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BaseCalculo")
                        .HasColumnType("money");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("Date");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDepto")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpIncentivo");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("IdDepto");

                    b.ToTable("EmpIncentivos");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.Evaluacion", b =>
                {
                    b.Property<int>("IdEvaluacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvaluacion"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("finalizado")
                        .HasColumnType("bit");

                    b.HasKey("IdEvaluacion");

                    b.ToTable("Evaluaciones");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.EvaluacionAsistencia", b =>
                {
                    b.Property<int>("IdEvaluacionAsistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvaluacionAsistencia"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradoPonderado")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.HasKey("IdEvaluacionAsistencia");

                    b.ToTable("EvaluacionAsistencia");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.EvaluacionDetalle", b =>
                {
                    b.Property<int>("IdEvaluacionDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvaluacionDetalle"));

                    b.Property<int>("Actitud")
                        .HasColumnType("int");

                    b.Property<int>("Asistencia")
                        .HasColumnType("int");

                    b.Property<decimal>("BaseCalculo")
                        .HasColumnType("money");

                    b.Property<int>("Cooperacion")
                        .HasColumnType("int");

                    b.Property<decimal>("DiasProporcional")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Extra")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDepto")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdEvaluacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdEvaluacionDetalle");

                    b.HasIndex("IdDepto");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEvaluacion");

                    b.ToTable("EvaluacionesDetalle");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.GrupoDeptoIncentivo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupo"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGrupo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("GrupoDeptoIncentivo");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.HistIncentivos", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<string>("Autorizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BaseCalculo")
                        .HasColumnType("money");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDepto")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<int?>("idEvaluacion")
                        .HasColumnType("int");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdDepto");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("HistorialIncentivos");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.PorcentajeEvaluacion", b =>
                {
                    b.Property<int>("IdPorcentajeEvaluacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPorcentajeEvaluacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<int>("Porcentaje")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPorcentajeEvaluacion");

                    b.ToTable("PorcentajeEvaluacion");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.PuntajeAsistencia", b =>
                {
                    b.Property<int>("IdPuntajeAsistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPuntajeAsistencia"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<int>("Maximo")
                        .HasColumnType("int");

                    b.Property<int>("Minimo")
                        .HasColumnType("int");

                    b.Property<int>("Porcentaje")
                        .HasColumnType("int");

                    b.HasKey("IdPuntajeAsistencia");

                    b.ToTable("PuntajeAsistencia");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.Suspension", b =>
                {
                    b.Property<int>("IdSuspension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSuspension"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("Date");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("FechaUltimaMod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDepto")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioMod")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSuspension");

                    b.HasIndex("IdDepto");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("Suspensiones");
                });

            modelBuilder.Entity("ImportacionRevision", b =>
                {
                    b.HasOne("SAESoft.Models.Importaciones.Importacion", null)
                        .WithMany()
                        .HasForeignKey("ImportacionesIdImport")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Importaciones.Revision", null)
                        .WithMany()
                        .HasForeignKey("RevisionesIdRevision")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.HasOne("SAESoft.Models.AdministracionSistema.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisosIdPermiso")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.AdministracionSistema.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolesIdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.AdminStatus", b =>
                {
                    b.HasOne("SAESoft.Models.Administracion.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("IdTipoDoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Contrato", b =>
                {
                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.DepartamentoInterno", b =>
                {
                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Documento", b =>
                {
                    b.HasOne("SAESoft.Models.Administracion.Empleado", "Empleado")
                        .WithMany("Documentos")
                        .HasForeignKey("IdEmpleado");

                    b.HasOne("SAESoft.Models.Administracion.Familiar", "Familiar")
                        .WithMany("Documentos")
                        .HasForeignKey("IdFamiliar");

                    b.HasOne("SAESoft.Models.Administracion.TipoDocumento", "Tipo")
                        .WithMany("Documentos")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Familiar");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Empleado", b =>
                {
                    b.HasOne("SAESoft.Models.Administracion.Contrato", "Contrato")
                        .WithOne("Empleado")
                        .HasForeignKey("SAESoft.Models.Administracion.Empleado", "IdContrato");

                    b.HasOne("SAESoft.Models.Administracion.DepartamentoInterno", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Administracion.PermisoTrabajo", "PermisoTrabajo")
                        .WithOne("Empleado")
                        .HasForeignKey("SAESoft.Models.Administracion.Empleado", "IdPermisoTrabajo");

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Puesto")
                        .WithMany()
                        .HasForeignKey("IdPuesto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Administracion.Residencia", "Residencia")
                        .WithOne("Empleado")
                        .HasForeignKey("SAESoft.Models.Administracion.Empleado", "IdResidencia");

                    b.HasOne("SAESoft.Models.Administracion.SeguroMedico", "SeguroMedico")
                        .WithOne("Empleado")
                        .HasForeignKey("SAESoft.Models.Administracion.Empleado", "IdSeguroMedico");

                    b.HasOne("SAESoft.Models.Administracion.SeguroVehiculo", "SeguroVehiculo")
                        .WithOne("Empleado")
                        .HasForeignKey("SAESoft.Models.Administracion.Empleado", "IdSeguroVehiculo");

                    b.Navigation("Contrato");

                    b.Navigation("Departamento");

                    b.Navigation("PermisoTrabajo");

                    b.Navigation("Puesto");

                    b.Navigation("Residencia");

                    b.Navigation("SeguroMedico");

                    b.Navigation("SeguroVehiculo");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Familiar", b =>
                {
                    b.HasOne("SAESoft.Models.Administracion.Empleado", "Empleado")
                        .WithMany("Familiares")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Parentesco")
                        .WithMany()
                        .HasForeignKey("IdParentesco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Administracion.Residencia", "Residencia")
                        .WithOne("Familiar")
                        .HasForeignKey("SAESoft.Models.Administracion.Familiar", "IdResidencia");

                    b.HasOne("SAESoft.Models.Administracion.SeguroMedico", "SeguroMedico")
                        .WithOne("Familiar")
                        .HasForeignKey("SAESoft.Models.Administracion.Familiar", "IdSeguroMedico");

                    b.Navigation("Empleado");

                    b.Navigation("Parentesco");

                    b.Navigation("Residencia");

                    b.Navigation("SeguroMedico");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.HistorialReclamo", b =>
                {
                    b.HasOne("SAESoft.Models.Administracion.Reclamo", "Reclamo")
                        .WithMany("Historial")
                        .HasForeignKey("IdReclamo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Administracion.AdminStatus", "Status")
                        .WithMany()
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Reclamo");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.HistorialTramite", b =>
                {
                    b.HasOne("SAESoft.Models.Administracion.AdminStatus", "Status")
                        .WithMany()
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Administracion.Tramite", "Tramite")
                        .WithMany("Historial")
                        .HasForeignKey("IdTramite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Tramite");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Nombramiento", b =>
                {
                    b.HasOne("SAESoft.Models.Administracion.Empleado", "Empleado")
                        .WithMany("Nombramientos")
                        .HasForeignKey("IdEmpleado");

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Tipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Empresa");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.PermisoTrabajo", b =>
                {
                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Tipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Reclamo", b =>
                {
                    b.HasOne("SAESoft.Models.Administracion.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Comunes.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("IdMoneda")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Administracion.Familiar", "Familiar")
                        .WithMany()
                        .HasForeignKey("IdPaciente");

                    b.HasOne("SAESoft.Models.Administracion.AdminStatus", "Status")
                        .WithMany()
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "TipoReclamo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Familiar");

                    b.Navigation("Moneda");

                    b.Navigation("Status");

                    b.Navigation("TipoReclamo");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Residencia", b =>
                {
                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Tipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.SeguroVehiculo", b =>
                {
                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Aseguradora")
                        .WithMany()
                        .HasForeignKey("IdAseguradora")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aseguradora");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Tramite", b =>
                {
                    b.HasOne("SAESoft.Models.Administracion.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Administracion.Familiar", "Familiar")
                        .WithMany()
                        .HasForeignKey("IdInteresado");

                    b.HasOne("SAESoft.Models.Administracion.AdminStatus", "Status")
                        .WithMany()
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Administracion.TipoDocumento", "Tipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Familiar");

                    b.Navigation("Status");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SAESoft.Models.AdministracionSistema.Permiso", b =>
                {
                    b.HasOne("SAESoft.Models.AdministracionSistema.Modulo", "Modulo")
                        .WithMany("Permisos")
                        .HasForeignKey("IdModulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("SAESoft.Models.AdministracionSistema.Usuario", b =>
                {
                    b.HasOne("SAESoft.Models.AdministracionSistema.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SAESoft.Models.Comunes.Firma", b =>
                {
                    b.HasOne("SAESoft.Models.AdministracionSistema.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("IdModulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("SAESoft.Models.Comunes.Grupo", b =>
                {
                    b.HasOne("SAESoft.Models.AdministracionSistema.Modulo", "Modulo")
                        .WithMany("Grupos")
                        .HasForeignKey("IdModulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("SAESoft.Models.Comunes.Nombre", b =>
                {
                    b.HasOne("SAESoft.Models.Comunes.Grupo", "Grupo")
                        .WithMany("Nombres")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.ComentFacExport", b =>
                {
                    b.HasOne("SAESoft.Models.Exportaciones.Licencia", "Licencia")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdLicencia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Licencia");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.Descargo", b =>
                {
                    b.HasOne("SAESoft.Models.Exportaciones.Licencia", "Licencia")
                        .WithMany("Descargos")
                        .HasForeignKey("IdLicencia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Licencia");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.Duca", b =>
                {
                    b.HasOne("SAESoft.Models.Exportaciones.Duca", "DucaRef")
                        .WithMany("Ducas")
                        .HasForeignKey("IdDuca")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Exportaciones.Licencia", "Licencia")
                        .WithMany("Ducas")
                        .HasForeignKey("IdLicencia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "TipoDuca")
                        .WithMany()
                        .HasForeignKey("IdTipoDuca")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DucaRef");

                    b.Navigation("Licencia");

                    b.Navigation("TipoDuca");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.FacturaExport", b =>
                {
                    b.HasOne("SAESoft.Models.Importaciones.Aduana", "Aduana")
                        .WithMany()
                        .HasForeignKey("IdAduana");

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Consignatario")
                        .WithMany()
                        .HasForeignKey("IdConsignatario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Exportador")
                        .WithMany()
                        .HasForeignKey("IdExportador");

                    b.HasOne("SAESoft.Models.Exportaciones.Licencia", "Licencia")
                        .WithMany("Facturas")
                        .HasForeignKey("IdLicencia");

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Modalidad")
                        .WithMany()
                        .HasForeignKey("IdModalidad");

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "TipoFactura")
                        .WithMany()
                        .HasForeignKey("IdTipoFactura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aduana");

                    b.Navigation("Consignatario");

                    b.Navigation("Exportador");

                    b.Navigation("Licencia");

                    b.Navigation("Modalidad");

                    b.Navigation("TipoFactura");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.FacturaLocal", b =>
                {
                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "TipoFactura")
                        .WithMany()
                        .HasForeignKey("IdTipoFactura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("TipoFactura");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.BL", b =>
                {
                    b.HasOne("SAESoft.Models.Importaciones.Importacion", "Importacion")
                        .WithMany("BL")
                        .HasForeignKey("IdImportacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Importacion");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Contenedor", b =>
                {
                    b.HasOne("SAESoft.Models.Importaciones.Importacion", "Importacion")
                        .WithMany("Contenedores")
                        .HasForeignKey("IdImportacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Importacion");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.ImportHistorial", b =>
                {
                    b.HasOne("SAESoft.Models.Importaciones.Importacion", "Importacion")
                        .WithMany("ImportHistorial")
                        .HasForeignKey("IdImport")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Importaciones.ImportStatus", "ImportStatus")
                        .WithMany()
                        .HasForeignKey("IdImportStatus")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ImportStatus");

                    b.Navigation("Importacion");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Importacion", b =>
                {
                    b.HasOne("SAESoft.Models.Importaciones.Aduana", "Aduana")
                        .WithMany()
                        .HasForeignKey("IdAduana");

                    b.HasOne("SAESoft.Models.Importaciones.Agente", "Agente")
                        .WithMany("Importaciones")
                        .HasForeignKey("IdAgente");

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Almacenadora")
                        .WithMany()
                        .HasForeignKey("IdAlmacenadora");

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Destino")
                        .WithMany()
                        .HasForeignKey("IdDestino");

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Forwarder")
                        .WithMany()
                        .HasForeignKey("IdForwarder");

                    b.HasOne("SAESoft.Models.Importaciones.ImportStatus", "ImportStatus")
                        .WithMany("Importaciones")
                        .HasForeignKey("IdImportStatus")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Naviera")
                        .WithMany()
                        .HasForeignKey("IdNaviera")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Importaciones.Shipper", "Shipper")
                        .WithMany()
                        .HasForeignKey("IdShipper")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Terminal")
                        .WithMany()
                        .HasForeignKey("IdTerminal");

                    b.HasOne("SAESoft.Models.AdministracionSistema.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Aduana");

                    b.Navigation("Agente");

                    b.Navigation("Almacenadora");

                    b.Navigation("Destino");

                    b.Navigation("Forwarder");

                    b.Navigation("ImportStatus");

                    b.Navigation("Naviera");

                    b.Navigation("Shipper");

                    b.Navigation("Terminal");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Pago", b =>
                {
                    b.HasOne("SAESoft.Models.Importaciones.Contenedor", "Contenedor")
                        .WithOne("Pago")
                        .HasForeignKey("SAESoft.Models.Importaciones.Pago", "IdContenedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contenedor");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Poliza", b =>
                {
                    b.HasOne("SAESoft.Models.Importaciones.BL", "BL")
                        .WithMany("Polizas")
                        .HasForeignKey("IdBL")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Comunes.Nombre", "Modalidad")
                        .WithMany()
                        .HasForeignKey("IdModalidad");

                    b.Navigation("BL");

                    b.Navigation("Modalidad");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.Asistencia", b =>
                {
                    b.HasOne("SAESoft.Models.Incentivos.EmpIncentivos", "Empleado")
                        .WithMany("Asistencias")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Incentivos.Evaluacion", "Evaluacion")
                        .WithMany("Asistencias")
                        .HasForeignKey("IdEvaluacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Evaluacion");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.DeptoIncentivo", b =>
                {
                    b.HasOne("SAESoft.Models.Incentivos.GrupoDeptoIncentivo", "Grupo")
                        .WithMany("Departamentos")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.AdministracionSistema.Usuario", "Encargado")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Encargado");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.EmpIncentivos", b =>
                {
                    b.HasOne("SAESoft.Models.Incentivos.DeptoIncentivo", "DeptoIncentivos")
                        .WithMany("Empleados")
                        .HasForeignKey("IdDepto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DeptoIncentivos");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.EvaluacionDetalle", b =>
                {
                    b.HasOne("SAESoft.Models.Incentivos.DeptoIncentivo", "Departamento")
                        .WithMany("EvalacionDetalles")
                        .HasForeignKey("IdDepto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Incentivos.EmpIncentivos", "Empleado")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Incentivos.Evaluacion", "Evaluacion")
                        .WithMany("Detalles")
                        .HasForeignKey("IdEvaluacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Empleado");

                    b.Navigation("Evaluacion");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.GrupoDeptoIncentivo", b =>
                {
                    b.HasOne("SAESoft.Models.AdministracionSistema.Usuario", "Encargado")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Encargado");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.HistIncentivos", b =>
                {
                    b.HasOne("SAESoft.Models.Incentivos.DeptoIncentivo", "DeptoIncentivos")
                        .WithMany()
                        .HasForeignKey("IdDepto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Incentivos.EmpIncentivos", "Empleado")
                        .WithMany("HistIncentivos")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DeptoIncentivos");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.Suspension", b =>
                {
                    b.HasOne("SAESoft.Models.Incentivos.DeptoIncentivo", "DeptoIncentivos")
                        .WithMany()
                        .HasForeignKey("IdDepto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAESoft.Models.Incentivos.EmpIncentivos", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DeptoIncentivos");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Contrato", b =>
                {
                    b.Navigation("Empleado")
                        .IsRequired();
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Empleado", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Familiares");

                    b.Navigation("Nombramientos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Familiar", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.PermisoTrabajo", b =>
                {
                    b.Navigation("Empleado")
                        .IsRequired();
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Reclamo", b =>
                {
                    b.Navigation("Historial");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Residencia", b =>
                {
                    b.Navigation("Empleado")
                        .IsRequired();

                    b.Navigation("Familiar")
                        .IsRequired();
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.SeguroMedico", b =>
                {
                    b.Navigation("Empleado")
                        .IsRequired();

                    b.Navigation("Familiar")
                        .IsRequired();
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.SeguroVehiculo", b =>
                {
                    b.Navigation("Empleado")
                        .IsRequired();
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.TipoDocumento", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("SAESoft.Models.Administracion.Tramite", b =>
                {
                    b.Navigation("Historial");
                });

            modelBuilder.Entity("SAESoft.Models.AdministracionSistema.Modulo", b =>
                {
                    b.Navigation("Grupos");

                    b.Navigation("Permisos");
                });

            modelBuilder.Entity("SAESoft.Models.AdministracionSistema.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SAESoft.Models.Comunes.Grupo", b =>
                {
                    b.Navigation("Nombres");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.Duca", b =>
                {
                    b.Navigation("Ducas");
                });

            modelBuilder.Entity("SAESoft.Models.Exportaciones.Licencia", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Descargos");

                    b.Navigation("Ducas");

                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Agente", b =>
                {
                    b.Navigation("Importaciones");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.BL", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Contenedor", b =>
                {
                    b.Navigation("Pago")
                        .IsRequired();
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.ImportStatus", b =>
                {
                    b.Navigation("Importaciones");
                });

            modelBuilder.Entity("SAESoft.Models.Importaciones.Importacion", b =>
                {
                    b.Navigation("BL");

                    b.Navigation("Contenedores");

                    b.Navigation("ImportHistorial");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.DeptoIncentivo", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("EvalacionDetalles");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.EmpIncentivos", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Evaluaciones");

                    b.Navigation("HistIncentivos");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.Evaluacion", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("SAESoft.Models.Incentivos.GrupoDeptoIncentivo", b =>
                {
                    b.Navigation("Departamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
