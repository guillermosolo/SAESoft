<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnIncentivo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        rwAAA68BGB6xfQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABOQSURBVHhe7ZwJ
        dJXlmcehOGBLa+1mrXrmjHY8zlR7plO0JOyLKDBWe9rRmTNnTq3OVAiyC6IIIsgidEPbad1KbkLYAgQI
        kAAxy72BhCQQkkASArJUDBIgBAmbZnnmfS7vxZvL/33vt9zvLsl9zvkd20O+7f9/vvd93uW73eIRj3jE
        Ix7xiEc8/IOIejU1NU04d+7cbsFFAUU7DQ0NlJubqyQvL4/cbndbUVHRxbKysrqKioq3a2pq7pWPHA9f
        nD179k4haEWgwLHAzp07ofkqOClKS0tPVFZWPi0fv2sHv/lCyJg0n9m3bx802gicCAcOHHhIStE1Qzb7
        UNxYoK6uDpprlIKCgnbRGiyUcnS9EAlQgoSNFY4fPw6NNcuePXs2S0m6VggRmwNFjSVOnjwJDbVCeXl5
        ppSl6wQSNZZobGyEZlpl//7986U0XSOQqLFGfn4+NNMKXBNUVVX1kfJ0/kCCxhrCNGimVUpKSj6S8nT+
        QILGGm63Gxpphy4zT4AEjTWcSADRCpyQEnXuQILGGjy7h0y0A5+zS0wbI0GN0NR4ii4c+j1dLh1CVwvv
        pM/c34wIV923QQNDQUVFxZ+kTJ03kLnBaGqopislidCQcHPJfRc0LxSUlZXVSpk6byCDdfCbHy3mX+Nb
        lJ+7DRpol6KiogtSps4byGQdFw79DpgQWYrzUqCBdvF4PG1Sps4byGQdl0sHQxMiycH8idBAu3AhKGXq
        vIFM1nG18C5oQiRpKvgh5eXmQBPtImXqvIFM1oEMiAaq816GBtpFytR5A5msA4kfDVx230G785ZBE+0g
        Zeq8gUzWEY1dgI9m9z9SSd770EirSJk6byCTdfDEDxI/WrhccDvV5k8J2dBQytR5A5ms48KhP0Dho41m
        9710NP8Z2pO3lHa6t3lXDHnNgDeRFhcXX4f/f2FhoXJJWcrUeQOZrOXsJ3SlpD8UPRq5UjqAzjWews8S
        wOnTp6m+vp6OHj1K1dXVvE0sngCIpoaamEgCNr+poRY+g1GkTJ030EMbQrQEFw4tpctlw6KqMOR7uVw2
        nC4cftPwm69DytR5Az10nC+QMnXeQA8d5wukTJ030EN3JU42nKAPT1TT/qMltPtgDuVXZdCWPS5aW/RH
        SnUvorHJCWljlyVkif+WjHUlHB6T3LdJ/G/i/45JTtySlJIwSkoZm4FEiUUaznxCx+rrqPrYHiqryyPP
        gUzKLk+j9bv/TGmexfRe7mx6M3sSLdr0LM1e++80beVIGufqxwbbJik54f0n05/sISWNrUBiRjufnP6Y
        NpW+R0s2j6Hpq0bT+JSB0JhwkuRK/I2UNLYCCRzNVB3ZTTNWPwZNiDCtoluIvT2ESORo5cjHtTQ5bTgS
        PyoY40p8VcoaO4GEjlb+uG0qFD5qWJaQIWWNnUBCRyP1DR+JfjY0RZuD7JKyxk4gsaORvYc9SHDzuBLp
        +dR+NGFFP5q8agBNTR9I09cNopc2DKGZm4bS7C3DadbmYd5/h8dr6fvZWFffFyYsG/gdKW/0BxJbB6+o
        TZw4kZ555pmw8j9TnwKCB+fF9YPp9R0jaGHuSFrsHkW/KRxtiDcKRooWB5/TACIREjYnJSc+GfXDQ2Sy
        jkiYzzw78T+R0FomrRwAzTUKH4/Oa4ak5ISjIhleGf/X/ndIyaMrkMk6IpYA4/4bCqyDm3ZkrFEmrwnp
        /EKbSIQcbhVee23ITVL+yAcyWUekuoBnn3saiarlpY1DoLGG8Iym8aJWQOe1T+LJMckJbyQte+geaUPk
        ApkcjTSea6RxKf2BmBjuvxfmP4rNNcCc7IfheUPM9VbhyfT7e0pLwhtI7GjlhZWPIhFvgM2fkzUcGmuU
        qaFt/o1wbsyyxHfGvt/vAWlNeAIJHa3MWvsLJNx1pohh3csbh9KCXOtvPrMoX4wAwPnDyJ4kV9/nnnun
        z1ekTc4FEjpaWbjxV0gsLzyGR2Za4WVxLnSNYPBcwhsieV7PeYRezBgsuqxE+HcmOM+twrjkfj+SdoU+
        kNDRytLsiUgkL/zWIjPNskQwfrn54o8nlfjYDudyj6JXRVfE/4aOMcWyvkWia3tc2ha6QEJHK+/mzsLi
        COwUfP7M3TYCnl/HODFaWPCB/vrcLXELwX+LzmECV0gnl5DQOiI1DGR+PX80EsTLfNHsIuHN8kK6uvjj
        Jp2Hli+JOoPrjcmrB3pNNdP6LBHDyznZw2mKONZqnTEmue8SaZ/9QCbriJT5zK/n/BQKwszbPgIKboZF
        BSNJDMvg+Rnu29FxVuHpaa4V0LW0uBJaQjaHgEzWEckEmDjvcSyI4NWsh6HIZpi5aRg8N8P9ODomFOha
        HRWi9ZghLbQXyGQdkegCxj73K1r79s+p2K1+W2Zttjfu5wJuQpq6f351q/0EU8FDV3RNHUnL+qZIC+0F
        MjlqaDxDl+rXUFvdz4hqh1Dt7kFQDOblTHvDwLk7HoHnZbjvX+wxvpJolimWJp36/lVaaC+g8FFA86kC
        aj38tNd4Hx/tVbcAMzJszPsLpq1TJxf30+iYUDEhzfgU93WWJUyRFtoLJH4k+bShjFqOjO9gvI/GSnUC
        TFtn3aRga//zPwht8ReIhWnn9ogVgU5x/swhunp8gTB66A3G+7h6YAgSwwuLiMQ1wiub1cWf3T0FRnjN
        7NyDKyFH2mc/kBnhpKnxJF058Rdqrx0BTQ9kfAoQRGDHqIkr1E0wbxFDx4SamZnDjM8LuBKekvbZD2RK
        WGg87S3w2uuegEarmJGG59d5Dx8SNhjzNMVfEhd/JraR2WVh3qPaZJScnfDWqF7SPvsBzdEQimHgmwv+
        gxqKjb3xgcxdjYdqXKkjUYPBu4bQ+ZjpNuoKq/BkE7oXH29l9PfQ4QgmgB3z5838L6rLGQmNNcrv1inG
        6q7EGxZjgsFvN7/l8HyCUM/8GWFhrn7Pw8nyQUKHwX+jmqG/JOrWXdpoPZDJOqwkwLRJv6Rd6x6j9hps
        qhne3qierOFqHomqYvYWdfHHTTE6xml4WRvdD/Pb9f0C9SilmmGDpJXWApmsw0wXMD7padrqeoJaDqgr
        e7Ms36LuIxeIPhSJqmKSpr/lbwPQMU4SbDayuHAg1ESwmWoGWfsuEZlsGy7wPk4VBd6/oZu1RcY29dq6
        mSZ7fo66qU0S3cnigvAVfz7mblcPB6csT6TPqgdDTSSfi67hHfrwkduktcYCGmiD5lP51HboKXSDIWF7
        rjoB5m43Pl/PH4ygczB2t5NbZdpadUG6Kqs/1OMGDg5popoh/yvtDR7IRKtcrM8QNxG65h6x062eNTO6
        IrjYPVq7XYu/JELHOUmw2UieBkd6KDk4eLG0WB/ISCucP3OY2g8+im8mhJTvUicAz+ghcQOZvVX9iTnP
        y5sdTYQC3WzkorWJUIsgtFP10OHSZnUgM61w+ehSdBMh51CJZkXQ4MZQ3Sdfr9hcVbSKbkGoULR6SIug
        VCeukDarA5lphc/3/Yxaa36KbySE1GtWBI2s2s3XjbNFE8y7gtBxTvK6ZjZyUmoCXTlgsvn3sffubGmz
        OpCZOlTDwL9t+B5d2nELHdv2E3wzIeK8dkUwePE2Y4PmeFGEoWOcRjcbuXyrweIvkIr7S6mg10VpszqQ
        yTpUcwCcAOTu5eVY5r3UXmtvxk9FS7V6RZA3ViCBfSzxjNIWfzwMQ8c5SbDZyGNlPPOHtYDUDLhAu77p
        ET60sxfSZnUgk3UYSQCmfded1FLzC3yTNpmkEIwndpDIPniPPjqO4W8BdMUfTzLxm8r1A+8P5G8H0d+Z
        ZZZmNvL1NSaLv30/qiTPzcf9fZA2qwOZrEPXBfhf+Bo3U0vFSNEaPIxv2CIzV+AEGJ+mXxHkbdzoOEa3
        pYy/FQgcorFx6G/NoitI8/ONFn+DLlPx7QVC87ZAD6TN6kAmW6G19MEOF/anrej71Fr9c3Dj1pgv3gwk
        2LiUBCgyw1uwlevtrkS4t593AvHbHvilEF+Hm26GawqevmV4csnMNwK6lb8J4hqXDuDn70Dlj/eLF+0Y
        0p2RNqsDmWkFXQJ48fSmlkoxSjg4DD+ICZauV8+Xcz+PxOYPONDfM1PX4OKPN2n4/x23Amw4N/9sNPod
        If79IR5poPMFMn29uvhL3hyk+KsZdEW+9a03aO2HtFkdyEwrBE0ASevu+6mtxtwmkEDezTS3IshJ8Xyq
        utB6bZu6Pw/8ro9bEd5+phu3G/mGINhs5OFSTfFX1aeO3F8WYI39kTarA5lpBaMJwLR7bqGW/de2elth
        ZZZafF5PDxRb92MP/Mby51qBx/jwb/65FUEfjnJC8KZU/y4m2E4i3mrmfw5/5qxOFHUTevbBLVRyF7/1
        nwdqqkLarA5kphXMJICP1tI+1Fb7GHhQPZt2qAuneWBFULfvPtjPyPgXafzWo2afVw95DsK/VeCaA53P
        h674y8kbcONzVz14mNy9a5GOOqTN6kBmWsFKAjDthd8WrYG54SILhIRjeIetv9D81TAXeehv+Y0NZhT/
        0gg6luHfGPR+8Qua8jc0y8n8pXDg3/sYL+71QpX/zN/1t/5qoHZGkDarA5mpw9ww0Dgte4eIZm+U34Or
        Kfao32he6PEXW/fZVbCJIx/80UngsVw4er//F9fj+QUegvr/OycFDx/R+XQfhL6X6Vf8VT10RBTP1Ugv
        o0ib1YFM1mF0IsgK7Tu/J4aLwVuDyiJ19dxhRZB/6UvzYw9mJnN4yMYjAN4oOifrYe+kkWpdgVsG7hbQ
        ByXBZiNrdnuLv3YqvYdn8y4FamQWabM6kMk6nEwAHy37hmu/EzgiKmQkHsPf7vvE5uoe/Q3DP9SgK/6M
        MAO8yTwXwP+mOrduNnLWSlH8HUj4iHb23od0sYK0WR3IZB1OdQGBtBXdTa2KqeRPyjUrgtIAht9E9DcM
        993+xliBWxvfbwlyAehtfYJ8RBo4rPTB9cjeHd8/xgs4SA+rSJvVgUy2gtUiUM+XqaVitDB9eIcEaK5S
        T+r4VvR4okY58yew+0tiVuBronuaufzHdHD7t7yLN6FG2qwOZKYVnEmAa7QV/7MYLn4xb9BWM0Rp7uTV
        1yZhdNurp8i/CTdoKfrd9PvoUn5v+NyhQNqsDmSmFZxMAC+er1JL1RNENdf2HE5J7SikD++KoGiGdcWf
        bu/gb8Wxv/cYn883irf485uNfDH1QarMvg0/awiRNqsDmWkFxxNA0lr6r6I1eJxmrcIGPy+M122v5gqc
        h28+Y/6SP4w8mffR8fRv06XlPYlc3bx8lnoTnVx1K5VtuJtSP7D/kQgnne8e+K2/mP8V+HyhRtqsDmSm
        FcKVAEy751bKyXoAdgO8YPNCunqU4Ns29ueC4VS9/k5qc3W/brqO+tXfoOU2EoGXoqeLt74867vwmZxC
        2qwOZKYVwpkAPqqzv0Mzlve5wWTtjz2IQmxr9r/Q1dS/g0braE/p7m0RzHYR/NXv/635AZ3Pc66vVyFt
        Vgcy0wqRSACmWYj6Tvo/QbMDmb4igSoz/h6aa4YzK79KybnGZhHfKhxBJTvENcG9hwNpszqQmVaIVAL4
        2Jt1O01NeZDGAOOZhck/pAbXzdBQK7Sk9KDcLT+ApvtY5+lLzZ5b4P2GC2mzOpCZVoh0AjCNuV+jP6x+
        oIPxXCeku/6BWgz29WY5vPa79KeCjqOKNwsfoUrPPfAew420WR3ITCtEQwIw7YLCLXfQxJSf0LTkPrTf
        dSs0LpRcSutFa3c85DU/3ZNAn7q/Du8tEkib1YHMtEK0JICPxq29qdllvtCzw6kN36D2AtHNgPuJFNJm
        dSAzrRBVCbCxB1EKNslxVoqu5oOe+L4igLRZHchMK0RFAuQK4Vd9CRsTTlIFW27C9xhmpM3qQGZaIeIJ
        kCWaexYeGRIp1opkzAf3GkakzepAZlohYgnAAq8XTT4yIBpIE13CdpGc6N7DgLRZHchMK0QkAXaIJn+F
        M8O7kLNBJGkBeAaHkTarQ5jXHGimFcKeAJtFHxupQs8qXJ+EuUCUNqtDmLc70EwrhC0B8oSA6VFQ6FmF
        65St4SsQpc3qEOY9H2imFcKSANtEX7o8Rpr8YKwLT5cgbVYHEfUUBpYHGmoWxxMgkmN7pwhDgSht1seZ
        M2fuECbaSgLHEiBaxvZOwsntUGsgLQ4esiUYJ9gluOAz1iiOJEA0ju2dYrVIcq5vkA42kPY6H+Ji5YEX
        t0y0j+2dgpOdkx5pYhFpj/MhLhaaBIilsb1ThLBAlPY4H+Ji9hMgFsf2TsEvQY79LkHa43yIi1lPgFgf
        2zsFvwyZ4qWw0RpIe5wPcTFrCcBjex4OIQHiXGON9QJR2uN8iIuZT4DOOLZ3Cp4AyzZfIEp7nA9xMeMJ
        wGN7HvagB42jJ8NcgSjtcT7ExYwlQFca2zsF7zoyWCBKe5wPcTF9AnTVsb1TcNfJoyaktR/SHudDXEyd
        APGxvXN4dx2pWwNpj/MhLoYTID62dx4uEHk0BfSX9jgf4mIdEyA+tg8/oECU9jgf4mJ7r184PraPHB23
        pbdJe5wPcbEs70V5bI9uLE744FHWtS6hXtrjfIimZ6p3iIduKE744RbY3dMl7XE+aGe3r9GmHp/Cm4kT
        flZ0b6edve6T9oQnKKvHKErt3gZvKE744FFXxpcWSVvCG5TZ835K77FHNEGfw5uL4xxp3VtpTfcPRR02
        WtoRj3jEIx7xiEc84iGiW7f/ByhO04GNdI+YAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>